// @include box-shadow(0, 0, 0, 2px, $black, inset);
@mixin box-shadow($horz, $vert, $blur, $spread, $color, $inset: false) {
    @if $inset == true {
        box-shadow: inset $horz $vert $blur $spread $color;
    } @else {
        box-shadow: $horz $vert $blur $spread $color;
    }
}

// @include gradient(45deg, $black, transparent);
@mixin gradient($angle, $startCol, $endCol) {
    background: linear-gradient($angle, $startCol 0%, $endCol 100%);
}

// @include headerFont();
@mixin headerFont() {
    font-family: $headerFont;
    text-transform: uppercase;
    font-weight: bold;
}

// @include fluid-type(font-size, $minScreen, $maxScreen, $minFont, $maxFont);
@mixin fluid-type($properties, $min-vw, $max-vw, $min-value, $max-value) {
	& {
		@each $property in $properties {
			#{$property}: $min-value;
		}

		@media screen and (min-width: $min-vw) {
			@each $property in $properties {
				#{$property}: calc(#{$min-value} + #{strip-unit($max-value - $min-value)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));
			}
		}

		@media screen and (min-width: $max-vw) {
			@each $property in $properties {
				#{$property}: $max-value;
			}
		}
	}
}

@function strip-unit($value) {
	@return $value / ($value * 0 + 1);
}